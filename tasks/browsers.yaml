- name: Upgrade Google Chrome to the latest version
  apt:
    name: google-chrome-stable
    state: latest
  tags:
    - browser-chrome-update

- name: Upgrade Brave to the latest version
  apt:
    name: brave-browser
    state: latest
  tags:
    - browser-brave-update

- name: Upgrade Firefox to the latest version
  apt:
    name: firefox
    state: latest
  tags:
    - browser-firefox-update

- block:
  - name: Check if Chrome is installed via snap
    command: snap list google-chrome
    register: chrome_snap_check
    ignore_errors: true
    tags:
      - browser-chrome-install

  - name: Remove Chrome if installed via snap
    command: snap remove google-chrome
    when: chrome_snap_check.rc == 0
    become: true
    tags:
      - browser-chrome-install

  - name: Check if Google Chrome is installed
    shell: dpkg -l | grep google-chrome-stable
    register: chrome_installed
    ignore_errors: true
    tags:
      - browser-chrome-install

  - name: Add Google Chrome signing key
    apt_key:
      url: https://dl-ssl.google.com/linux/linux_signing_key.pub
      state: present
    become: true
    tags:
      - browser-chrome-install

  - name: Check if Google Chrome browser repository has been added
    lineinfile:
      path: "/etc/apt/sources.list.d/google-chrome.list"
      line: "deb [arch=amd64] http://dl.google.com/linux/chrome/deb/ stable main"
      create: yes
    become: true
    tags:
      - browser-chrome-install

  - name: Update APT package lists
    apt:
      update_cache: yes
    become: true
    tags:
      - browser-chrome-install

  - name: Install Google Chrome Browser
    apt:
      name: google-chrome-stable
      state: present
    become: true
    tags:
      - browser-chrome-install


  # - name: Download Google Chrome .deb file
  #   get_url:
  #     url: https://dl.google.com/linux/direct/google-chrome-stable_current_amd64.deb
  #     dest: "{{ temp_dir }}/google-chrome-stable_current_amd64.deb"
  #   when: chrome_installed.rc != 0
  #   tags:
  #     - browser-chrome-install
  #
  # - name: Install Google Chrome
  #   apt:
  #     deb: "{{ temp_dir }}/google-chrome-stable_current_amd64.deb"
  #   when:
  #     - chrome_installed.rc != 0
  #     - docker_container == False
  #   become: true
  #   tags:
  #     - browser-chrome-install
  #
  # - name: Remove Chrome .deb file
  #   file:
  #     path: "{{ temp_dir }}/google-chrome-stable_current_amd64.deb"
  #     state: absent
  #   when: chrome_installed.rc != 0
  #   tags:
  #     - browser-chrome-install

  - name: Check if Brave is installed via snap
    command: snap list brave
    register: brave_snap_check
    ignore_errors: true
    tags:
      - browser-brave-install

  - name: Remove Brave if installed via snap
    command: snap remove brave
    when: brave_snap_check.rc == 0
    become: true
    tags:
      - browser-brave-install

  - name: Download Brave browser's GPG key
    ansible.builtin.get_url:
      url: "https://brave-browser-apt-release.s3.brave.com/brave-browser-archive-keyring.gpg"
      dest: "/usr/share/keyrings/brave-browser-archive-keyring.gpg"
    become: true
    tags:
      - browser-brave-install

  - name: Check if Brave browsers repository has been added
    lineinfile:
      path: "/etc/apt/sources.list.d/brave-browser-release.list"
      line: "deb [signed-by=/usr/share/keyrings/brave-browser-archive-keyring.gpg] https://brave-browser-apt-release.s3.brave.com/ stable main"
      create: yes
    become: true
    tags:
      - browser-brave-install

  - name: Update APT package lists
    apt:
      update_cache: yes
    become: true
    tags:
      - browser-brave-install

  - name: Install Brave Browser
    apt:
      name: brave-browser
      state: present
    become: true
    tags:
      - browser-brave-install

  # - name: Check if Firefox is installed via snap
  #   command: snap list firefox
  #   register: firefox_snap_check
  #   ignore_errors: true
  #   tags:
  #     - browser-firefox-install
  #
  # - name: Remove Firefox if installed via snap
  #   command: snap remove firefox
  #   when: firefox_snap_check.rc == 0
  #   become: true
  #   tags:
  #     - browser-firefox-install
  #
  # - name: Download Firefox keyring
  #   ansible.builtin.get_url:
  #     url: "https://packages.mozilla.org/apt/repo-signing-key.gpg"
  #     dest: "/etc/apt/keyrings/packages.mozilla.org.asc"
  #     mode: 0755
  #   become: true
  #   tags:
  #     - browser-firefox-install
  #
  # - name: Check if Firefox browsers repository has been added
  #   lineinfile:
  #     path: "/etc/apt/sources.list.d/mozilla.list"
  #     line: "deb [signed-by=/etc/apt/keyrings/packages.mozilla.org.asc] https://packages.mozilla.org/apt mozilla main"
  #     create: yes
  #   become: true
  #   tags:
  #     - browser-firefox-install
  #
  # - name: Update APT package lists
  #   apt:
  #     update_cache: yes
  #   become: true
  #   tags:
  #     - browser-firefox-install
  #
  # - name: Install Firefox Browser
  #   apt:
  #     name: firefox
  #     state: present
  #   become: true
  #   tags:
  #     - browser-firefox-install

  - name: Add Mozilla PPA repository
    ansible.builtin.apt_repository:
      repo: ppa:mozillateam/ppa
      state: present
    tags:
      - browser-firefox-install

  - name: Create APT preferences file for Mozilla Firefox
    ansible.builtin.copy:
      dest: /etc/apt/preferences.d/mozilla-firefox
      content: |
        Package: *
        Pin: release o=LP-PPA-mozillateam
        Pin-Priority: 1001

        Package: firefox
        Pin: version 1:1snap*
        Pin-Priority: -1
    tags:
      - browser-firefox-install

  - name: Remove Snap version of Firefox if present
    ansible.builtin.command: snap remove firefox
    ignore_errors: yes
    register: snap_remove_result
    tags:
      - browser-firefox-install

  - name: Remove AppArmor files for Firefox
    ansible.builtin.file:
      path: "{{ item }}"
      state: absent
    loop:
      - /etc/apparmor.d/usr.bin.firefox
      - /etc/apparmor.d/local/usr.bin.firefox
    tags:
      - browser-firefox-install

  - name: Stop hunspell mount service if Firefox snap removal failed
    ansible.builtin.systemd:
      name: var-snap-firefox-common-host\\x2dhunspell.mount
      state: stopped
    when: snap_remove_result.failed
    tags:
      - browser-firefox-install

  - name: Disable hunspell mount service if Firefox snap removal failed
    ansible.builtin.systemd:
      name: var-snap-firefox-common-host\\x2dhunspell.mount
      enabled: true
    when: snap_remove_result.failed
    tags:
      - browser-firefox-install

  - name: Remove Snap version of Firefox again if previous attempt failed
    ansible.builtin.command: snap remove firefox
    when: snap_remove_result.failed
    tags:
      - browser-firefox-install

  - name: Install Firefox via APT
    ansible.builtin.apt:
      name: firefox
      state: latest
      update_cache: true
    tags:
      - browser-firefox-install

  - name: Ensure unattended upgrades do not reinstall Snap version of Firefox
    ansible.builtin.copy:
      dest: /etc/apt/apt.conf.d/51unattended-upgrades-firefox
      content: |
        Unattended-Upgrade::Allowed-Origins:: "LP-PPA-mozillateam:${distro_codename}";
    tags:
      - browser-firefox-install

  tags:
    - install
    - browsers
